const prompts = require('prompts');

module.exports = async (config) => {
	return await prompts([
		{
			type: 'text',
			name: 'description',
			message: 'Description:',
			initial: config.description,
		},
		{
			type: 'toggle',
			name: 'public',
			message: 'Public:',
			initial: config.public,
			active: 'yes',
			inactive: 'no',
		},
		{
			type: (public) => public ? 'toggle' : null,
			name: 'excludeFromSearch',
			message: 'Exclude from front end search results:',
			initial: config.excludeFromSearch,
			active: 'yes',
			inactive: 'no',
		},
		{
			type: 'toggle',
			name: 'hierarchical',
			message: 'Hierarchical (e.g., Pages):',
			initial: config.hierarchical,
			active: 'yes',
			inactive: 'no',
		},
		{
			type: 'toggle',
			name: 'showUi',
			message: 'Show admin UI:',
			initial: config.showUi,
			active: 'yes',
			inactive: 'no',
		},
		{
			type: 'toggle',
			name: 'showInRest',
			message: 'Show in REST (required to support the block editor):',
			initial: config.showInRest,
			active: 'yes',
			inactive: 'no',
		},
		{
			type: 'autocomplete',
			name: 'menuIcon',
			message: 'Icon:',
			initial: config.menuIcon,
			choices: [
				{ title: 'award', value: 'awards' },
				{ title: 'bank', value: 'bank' },
				{ title: 'book', value: 'book-alt' },
				{ title: 'calendar', value: 'calendar-alt' },
				{ title: 'chat bubbles', value: 'format-chat' },
				{ title: 'drink', value: 'coffee' },
				{ title: 'food', value: 'food' },
				{ title: 'globe', value: 'admin-site' },
				{ title: 'graduation cap', value: 'welcome-learn-more' },
				{ title: 'help icon', value: 'editor-help' },
				{ title: 'home', value: 'admin-home' },
				{ title: 'homes', value: 'admin-multisite' },
				{ title: 'image', value: 'format-image' },
				{ title: 'images', value: 'format-gallery' },
				{ title: 'info icon', value: 'info' },
				{ title: 'key', value: 'admin-network' },
				{ title: 'map marker', value: 'location' },
				{ title: 'map with pin', value: 'location-alt' },
				{ title: 'megaphone', value: 'megaphone' },
				{ title: 'padlock', value: 'lock' },
				{ title: 'palette', value: 'art' },
				{ title: 'palm tree', value: 'palmtree' },
				{ title: 'push pin', value: 'admin-post' },
				{ title: 'quote', value: 'format-quote' },
				{ title: 'shopping bag', value: 'products' },
				{ title: 'shopping cart', value: 'cart' },
				{ title: 'smiley', value: 'smiley' },
				{ title: 'speech bubble', value: 'format-status' },
				{ title: 'star', value: 'star-filled' },
				{ title: 'store', value: 'store' },
				{ title: 'thumbs up', value: 'thumbs-up' },
				{ title: 'tickets', value: 'tickets-alt' },
				{ title: 'user', value: 'admin-users' },
				{ title: 'users', value: 'groups' },
				{ title: 'video', value: 'video-alt3' },
			],
		},
		{
			type: 'multiselect',
			name: 'supports',
			message: 'Supports:',
			choices: [
				{ title: 'title', value: 'title', selected: config.supports.includes('title') },
				{ title: 'editor', value: 'editor', selected: config.supports.includes('editor') },
				{ title: 'comments', value: 'comments', selected: config.supports.includes('comments') },
				{ title: 'revisions', value: 'revisions', selected: config.supports.includes('revisions') },
				{ title: 'trackbacks', value: 'trackbacks', selected: config.supports.includes('trackbacks') },
				{ title: 'author', value: 'author', selected: config.supports.includes('author') },
				{ title: 'excerpt', value: 'excerpt', selected: config.supports.includes('excerpt') },
				{ title: 'page-attributes', value: 'page-attributes', selected: config.supports.includes('page-attributes') },
				{ title: 'thumbnail', value: 'thumbnail', selected: config.supports.includes('thumbnail') },
				{ title: 'custom-fields', value: 'custom-fields', selected: config.supports.includes('custom-fields') },
				{ title: 'post-formats', value: 'post-formats', selected: config.supports.includes('post-formats') },
			],
		},
	], {
		onCancel() {
			process.exit(1);
		},
	});
};